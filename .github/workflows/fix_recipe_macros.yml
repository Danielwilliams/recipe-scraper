name: Fix Recipe Macros

on:
  schedule:
    # Run every Monday at 3:00 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:
    # Allow manual triggering of the workflow with input parameters
    inputs:
      recipe_limit:
        description: 'Number of recipes to process'
        required: true
        default: '100'
        type: string
      dry_run:
        description: 'Dry run mode (no database updates)'
        required: true
        default: 'false'
        type: boolean

jobs:
  fix-macros:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run macro fixer script (scheduled run)
        if: github.event_name == 'schedule'
        run: |
          python fix_recipe_macros.py --limit 100
      
      - name: Run macro fixer script (manual run)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "Running in dry-run mode - no database updates will be made"
            python fix_recipe_macros.py --limit ${{ github.event.inputs.recipe_limit }} --dry-run
          else
            echo "Running in normal mode - database will be updated"
            python fix_recipe_macros.py --limit ${{ github.event.inputs.recipe_limit }}
          fi
      
      - name: Upload log file
        uses: actions/upload-artifact@v4
        with:
          name: recipe-macro-fix-logs
          path: recipe_macro_fix.log